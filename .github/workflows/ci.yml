name: CI
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  ci:
    name: CI
    strategy:
      matrix:
        # os: [ubuntu-latest, macos-latest, windows-latest]
        # os: [macos-latest, windows-latest]
        os: [windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'adopt'
        java-version: '17'
        cache: sbt

    - name: Setup Coursier
      uses: coursier/cache-action@v6.3

    - name: Setup Scala CLI
      uses: VirtusLab/scala-cli-setup@main
      # with:
      #   jvm: adopt:17
      #   apps: sbtn bloop ammonite

    # - name: Install system dependencies (Linux)
    #   if: matrix.os == 'ubuntu-latest'
    #   run: sudo apt-get update && sudo apt-get install -y clang libstdc++-12-dev libidn2-dev

    - name: Install system dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: brew install libidn2 curl

    - name: Install system dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: choco install curl
      # vcpkg install libidn2

    - name: Setup sbt launcher
      uses: sbt/setup-sbt@v1
      with:
        sbt-runner-version: 1.10.6

    - name: Cache SBT Dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.ivy2/cache
          ~/.sbt
        key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}
        restore-keys: |
          ${{ runner.os }}-sbt-

    - name: Format Check
      run: sbt scalafmtCheck
      if: matrix.os != 'windows-latest'

    - name: Run Tests
      run: sbt clean test
